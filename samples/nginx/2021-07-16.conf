user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
  worker_connections  10240;
}

http {
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" "$http_accept_encoding"';

  access_log  /var/log/nginx/access.log  main;

  upstream aaa {
    server 127.0.0.1:40404 weight=1;
  }
  upstream bbb {
    server httpbin.org:80 weight=1;
  }

  server {
    server_name localhost;
    listen 80 default_server;
    # NOTE: gzip 関連
    gzip on;
    gzip_types application/json application/octet-stream;
    gzip_proxied any;
    # NGINX の情報を秘匿する
    server_tokens off;
    # 502, 504 のレスポンスをデフォルトのものから変更
    error_page 502 =502 /-/error/502;
    error_page 504 =504 /-/error/504;
    location = /-/error/502 { return 502 "Please wait a while and try again. (502)"; }
    location = /-/error/504 { return 504 "Please wait a while and try again. (504)"; }
    # NOTE: 413 Request Entity Too Large 対策。 client_max_body_size を 1M ( デフォルト値 ) から 20M に変更。
    client_max_body_size 20M;
    # NOTE: バックエンドからのレスポンスに時間がかかるためタイムアウト時間を延長。
    proxy_send_timeout 120;
    proxy_read_timeout 120;
    # favicon が無い場合
    location = /favicon.ico {
      empty_gif;
      access_log    off;
      log_not_found off;
    }
    # 502 テスト用
    location /test/502 {
      # NOTE: 502 を出すために接続性のない宛先に proxy している。
      proxy_pass http://aaa;
    }
    # 504 テスト用
    location /test/504 {
      # NOTE: 504 を出すために諸々の timeout を 0 に設定。
      proxy_connect_timeout 0;
      proxy_send_timeout    0;
      proxy_read_timeout    0;
      send_timeout          0;
      proxy_pass            http://aaa;
    }
    # 200 テスト用
    location /statue/200 {
      # NOTE: 起動時または設定リロード時にしか名前解決をしない問題に対処
      # NOTE: https://www.nginx.com/blog/dns-service-discovery-nginx-plus/
      # NOTE: > NGINX caches the DNS records until the next restart or configuration reload, ignoring the records’ TTL values.
      resolver 8.8.8.8;
      proxy_pass http://httpbin.org/;
    }
    location / { proxy_pass http://bbb; }
  }
}
